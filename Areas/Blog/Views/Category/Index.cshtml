@model IEnumerable<AppMvc.Net.Models.Category>
@inject AppMvc.Net.Menu.AdminSidebarService adminSidebarService


@{
    ViewData["Title"] = "Chuyên mục Blog";
    Layout = "/Views/Shared/_LayoutAdmin.cshtml";

}

@* <h1>@ViewData["Title"]</h1> *@

<p>
    <a asp-action="Create" class="btn btn-primary btn-sm">Tạo chuyên mục</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            @* <th>
                @Html.DisplayNameFor(model => model.Description)
            </th> *@
            <th>
                @Html.DisplayNameFor(model => model.Slug)
            </th>
            @* <th>
                @Html.DisplayNameFor(model => model.ParentCategory)
            </th> *@
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
    
    await RenderCategory(item, 0);
     
}
    </tbody>
</table>
@{
    async Task RenderCategory(Category item, int level){
        string prefix = string.Concat(Enumerable.Repeat("&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;", level));
      
           <tr>
            <td>
                @Html.Raw(prefix) 
                <a asp-action="Edit" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>

            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td> *@
            <td>
                @Html.DisplayFor(modelItem => item.Slug)
            </td>
            @* <td>
                @Html.DisplayFor(modelItem => item.ParentCategory.Title)
            </td> *@
            <td>
                @* <a asp-action="Edit" asp-route-id="@item.Id">Sửa</a> | *@
               <a asp-action="Details" asp-route-id="@item.Id">Chi tiết</a> | 
                <a asp-action="Delete" asp-route-id="@item.Id">Xóa</a>
            </td>
        </tr>
        @if(item.CategoryChildren?.Count  > 0){
            level = level + 1;
            foreach(var child in item.CategoryChildren){
               await RenderCategory(child, level);
            }
        }

    }
}

@{
    adminSidebarService.SetActive("Category", "Index", "Blog");
}
@section Sidebar
{
    @Html.Raw(adminSidebarService.renderHtml())

}